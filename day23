#include <bits/stdc++.h>
using namespace std;

vector<int> slidingWindowMax(vector<int>& arr, int k) 
{
    deque<int> dq; 
    vector<int> result;

    for (int i = 0; i < arr.size(); i++) 
    {
        if (!dq.empty() && dq.front() <= i - k)
            dq.pop_front();
        while (!dq.empty() && arr[dq.back()] <= arr[i])
            dq.pop_back();
        dq.push_back(i);
        if (i >= k - 1)
            result.push_back(arr[dq.front()]);
    }

    return result;
}

int main()
{
    vector<int> arr1 = {1, 3, -1, -3, 5, 3, 6, 7};
    int k1 = 3;
    vector<int> res1 = slidingWindowMax(arr1, k1);
    for (int x : res1) cout << x << " "; // Output: 3 3 5 5 6 7
    cout << endl;

    return 0;
}
